#!/bin/bash

#Traceback it, when called without params
source $1

usage="arguments: <path to Vagrantfile>, state <started|stopped|destroyed>"

path_without_dest=$(basename $path);
if [[ -d $path ]];
	then
	cd $path;
	if [[ ! -f "Vagrantfile" ]];
		then
		echo "No Vagrantfile found in $path"
		exit 0;
	fi
	cd -;
else
	folder_path=$(dirname $path);
	cd $folder_path;
	if [[ ! -f "$path_without_dest" ]];
		then
		echo "No Vagrantfile found in $path"
		exit 0;	
	else
		path=$folder_path;
	fi
	cd -;
fi

cd $path
get_status ()	{
a=$(vagrant status)	
if [[ `echo $a | grep "not created (virtualbox)"` > 0 ]]; 
	then		
	v_status="not created"	
elif [[ `echo $a | grep "running (virtualbox)"` > 0 ]]; 
	then		
	v_status="running"	
elif [[ `echo $a | grep "poweroff (virtualbox)"` > 0 ]]; 
	then		
	v_status="poweroff"	
fi	
}

set_status () {
	case "$1" in
		started)
			vagrant up
			;;
		stopped)
			vagrant halt -f
			;;
		destroyed)
			vagrant destroy -f
			;;
			*)
			echo "$usage"
			exit 0;
			;;
	esac
}

ip_addr () {
	ip_addr=$(cat $path/Vagrantfile | grep ip: | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b");
}
username_toconnect () {
	username_toconnect="vagrant"
}
os_name () {
	os_name=$(cat $path/Vagrantfile | grep hostname | sed 's/^.*hostname = \"//' | sed 's/\"//');
}
ram_size () {
	ram_size=$(cat $path/Vagrantfile | grep memory | sed 's/^.*memory = \"//' | sed 's/\"//');
}
path_to_sshkey () {
	path_to_sshkey="./.vagrant/machines/$os_name/virtualbox/private_key";
}
port () {
	port=22
}

set_status $state
sleep 2s
get_status
os_name
path_to_sshkey
username_toconnect
ram_size
ip_addr
port

cd -

#Output Here
cat << EOF
{
	"changed": false,
	"failed": false, 
	"vagrant_state": "$v_status",
	"ip_addr": "$ip_addr",
	"port": "$port",
	"path_to_sshkey": "$path_to_sshkey",
	"username_toconnect": "$username_toconnect",
	"os_name": "$os_name",
	"ram_size": "$ram_size" 
}
EOF